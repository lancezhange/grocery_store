(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{228:function(t,s,a){t.exports=a.p+"assets/img/2019-06-02-08-10-31.50e35fa4.png"},229:function(t,s,a){t.exports=a.p+"assets/img/2019-05-27-14-21-40.cb4bcf4c.png"},483:function(t,s,a){"use strict";a.r(s);var e=a(17),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"图论-ignore-true"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图论-ignore-true"}},[t._v("#")]),t._v(" 图论 {ignore=true}")]),t._v(" "),e("p",[t._v("[TOC]")]),t._v(" "),e("h2",{attrs:{id:"基础理论"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础理论"}},[t._v("#")]),t._v(" 基础理论")]),t._v(" "),e("h2",{attrs:{id:"常见问题和算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题和算法"}},[t._v("#")]),t._v(" 常见问题和算法")]),t._v(" "),e("h3",{attrs:{id:"最小生成树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最小生成树"}},[t._v("#")]),t._v(" 最小生成树")]),t._v(" "),e("p",[t._v("因为是最小，因此肯定是针对带权图。\n所谓最小生成树，即图的极小连通子图，它包含图的所有顶点，并且所有边权之和达到最小。\n显然，最小生成树可能不是唯一的。")]),t._v(" "),e("p",[t._v("按照定义，最小生成树不可能有环（这也是为什么叫树的原因）")]),t._v(" "),e("p",[t._v("最小生成树的用处： 用最低成本在多个城市之间修建铁路。")]),t._v(" "),e("h4",{attrs:{id:"prims-algorithm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prims-algorithm"}},[t._v("#")]),t._v(" Prims Algorithm")]),t._v(" "),e("p",[t._v("以图的顶点为基础，从一个初始顶点开始，寻找触达其他顶点权值最小的边，并把该顶点加入到已触达顶点的集合中。当全部顶点都加入到集合时，算法的工作就完成了。Prim 算法的本质，是基于贪心算法。")]),t._v(" "),e("h3",{attrs:{id:"最短路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最短路径"}},[t._v("#")]),t._v(" 最短路径")]),t._v(" "),e("h4",{attrs:{id:"单源最短路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单源最短路径"}},[t._v("#")]),t._v(" 单源最短路径")]),t._v(" "),e("h5",{attrs:{id:"dijkstra-算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dijkstra-算法"}},[t._v("#")]),t._v(" Dijkstra 算法")]),t._v(" "),e("h4",{attrs:{id:"多源最短路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多源最短路径"}},[t._v("#")]),t._v(" 多源最短路径")]),t._v(" "),e("p",[e("img",{attrs:{src:a(228),alt:""}})]),t._v(" "),e("p",[t._v("可以先用 Dijkstra 算法，求出单个顶点到其他所有顶点的最短路径长度（"),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("mi",[t._v("O")]),e("mo",[t._v("(")]),e("msup",[e("mi",[t._v("n")]),e("mn",[t._v("2")])],1),e("mo",[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(n^2)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),e("span",{staticClass:"strut bottom",staticStyle:{height:"1.064108em","vertical-align":"-0.25em"}}),e("span",{staticClass:"base textstyle uncramped"},[e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathit"},[t._v("n")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("2")])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v("），遍历顶点，即可至所有顶点到其他顶点的最短路径。整体复杂度为 "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("mi",[t._v("O")]),e("mo",[t._v("(")]),e("msup",[e("mi",[t._v("n")]),e("mn",[t._v("3")])],1),e("mo",[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("O(n^3)")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"strut",staticStyle:{height:"0.8141079999999999em"}}),e("span",{staticClass:"strut bottom",staticStyle:{height:"1.064108em","vertical-align":"-0.25em"}}),e("span",{staticClass:"base textstyle uncramped"},[e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("O")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathit"},[t._v("n")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"-0.363em","margin-right":"0.05em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("3")])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"mclose"},[t._v(")")])])])])]),t._v(" "),e("h5",{attrs:{id:"floyd-算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floyd-算法"}},[t._v("#")]),t._v(" Floyd 算法")]),t._v(" "),e("ol",[e("li",[t._v("先构建邻接矩阵\n每一个元素代表从某个顶点到另一个顶点的直接距离")])]),t._v(" "),e("h3",{attrs:{id:"pagerank"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pagerank"}},[t._v("#")]),t._v(" PageRank")]),t._v(" "),e("h3",{attrs:{id:"simrank"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#simrank"}},[t._v("#")]),t._v(" SimRank")]),t._v(" "),e("p",[t._v("参考 "),e("a",{attrs:{href:"http://xudongyang.coding.me/simrank-plus-plus/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SimRank++算法原理解析"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("利用已有个体的相似度来推算其他与之有关联个体的相似度")])]),t._v(" "),e("p",[t._v("其基本思想是：如果两个对象 a 和 b 分别与另外两个对象 c 和 d 关联，且已知 c 与 d 是相似的，则 a 与 b 也是相似的；并且任意节点与其自身拥有最大的相似度值为 1。")]),t._v(" "),e("p",[t._v("把对象和对象之间的关系建模为一个有向图 "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("G")])],1),e("mo",[t._v("=")]),e("mo",[t._v("(")]),e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("V")])],1),e("mo",{attrs:{separator:"true"}},[t._v(",")]),e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("E")])],1),e("mo",[t._v(")")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\mathrm { G } = ( \\mathrm { V } , \\mathrm { E } )")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),e("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"base textstyle uncramped"},[e("span",{staticClass:"mord textstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("G")])]),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord textstyle uncramped"},[e("span",{staticClass:"mord mathrm",staticStyle:{"margin-right":"0.01389em"}},[t._v("V")])]),e("span",{staticClass:"mpunct"},[t._v(",")]),e("span",{staticClass:"mord textstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("E")])]),e("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(". 在推荐系统中，假设用户和物品在空间中形成了一个二部图。\n对于图中的一个节点 𝑎，与其所有入边关联的邻节点集合(in-neighbors)记为 𝐼(𝑎)\n同时，其出边对应的邻节点集合(out-neighbors)集合记为 𝑂(𝑎)。")]),t._v("\ns ( a , b ) = \\left\\\\{ \\begin{array} { l l } { 1 , } & { a = b } \\\\\\ { \\frac { c } { | I ( a ) | I ( b ) | } \\sum _ { i } ^ { I ( a ) | } \\sum _ { j } ^ { | I ( b ) | } s \\left( I _ { i } ( a ) , I _ { j } ( b ) \\right) , } & { a \\neq b \\wedge I ( a ) , I ( b ) \\neq \\emptyset } \\\\\\ { 0 , } & { \\text { otherwise } } \\end{array} \\right.\n\n"),e("p",[t._v("式中 𝑐 是一个常量衰减因子.")]),t._v(" "),e("p",[t._v("用上式直接计算两个物品或者两个用户之间的相似度是比较困难的，一般需要通过迭代方式.")]),t._v(" "),e("p",[t._v("令 P 表示 G 的连接矩阵，其中 𝑃(𝑖,𝑗)表示从顶点 𝑖 到顶点 𝑗 的边数，则")]),t._v("\n\\begin{align}\ns ^ { k + 1 } ( a , b ) & = \\frac { c } { | I ( a ) | | I ( b ) | } \\sum _ { i } ^ { n } \\sum _ { j } ^ { n } p _ { i , a } \\cdot s ^ { k } ( a , b ) \\cdot p _ { j , b } \\\\\\\n &=  c \\cdot \\sum _ { i } ^ { n } \\sum _ { j } ^ { n } \\left( \\frac { p _ { i , a } } { \\sum _ { i } ^ { n } p _ { i , a } } \\right)   \\cdot s ^ { k } ( a , b ) \\cdot \\left( \\frac { p _ { j , b } } { \\sum _ { j } ^ { n } p _ { j , b } } \\right)\n\\end{align}\n\n"),e("p",[t._v("用矩阵的形式可以写为")]),t._v("\nS ^ { k } = \\left\\\\{ \\begin{array} { l l } { c W ^ { T } S ^ { k - 1 } W + I _ { n } - \\operatorname { Diag } \\left( \\operatorname { diag } \\left( c W ^ { T } S ^ { k - 1 } W \\right) \\right) , } & { k > 0 } \\\\\\ { I _ { n } , } & { k = 0 } \\end{array} \\right.\n\n"),e("p",[t._v("其中，矩阵 𝑊 表示按列归一化的 𝑃 矩阵， 𝐼 是 𝑛×𝑛 的单位矩阵。对于一个矩阵 𝑋，𝑑𝑖𝑎𝑔(𝑋)表示获得由所有 𝑋 的主对角线上的元素构成的向量；对于一个向量 𝑥，𝐷𝑖𝑎𝑔(𝑥)操作得到相应的对角矩阵，即 𝑥=𝑑𝑖𝑎𝑔(𝐷𝑖𝑎𝑔(𝑥))。由于任意对象和自己的相似度值为 1，所以加上项 𝐼𝑛−𝐷𝑖𝑎𝑔(𝑑𝑖𝑎𝑔(𝑐𝑊𝑇𝑆𝑘−1𝑊))，其作用是把矩阵 的主对角线元素设为 1。")]),t._v(" "),e("h4",{attrs:{id:"simrank-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#simrank-2"}},[t._v("#")]),t._v(" SimRank++")]),t._v(" "),e("p",[t._v("SimRank++算法对 SimRank 算法主要做了两点改进。第一点是考虑了边的权值，第二点是考虑了子集节点相似度的证据。")]),t._v(" "),e("p",[t._v("原始 SimRank 的一个问题是， 认为只要有边相连，则为相似，却没有考虑到如果共同相连的边越多，则意味着两个节点的相似度会越高。")]),t._v(" "),e("p",[t._v("例如： 京东和淘宝平台上都有卖手机和平板，另外，在淘宝上还有手机和相机，并假设衰减系数为 0.8。则，手机和相机的相似度为 0.8，而手机和平板的相似度依次迭代为 0.4， 0.56， 0.624 ... ，但依然小于手机和相机的相似度。")]),t._v(" "),e("p",[t._v("但直观上，手机和相似度只有在淘宝上有，而手机和平板在淘宝和京东上都有，手机和平板的相似度应该更高才对。")]),t._v(" "),e("p",[t._v("一个可行的校正方法是对原始的 SimRank 算法的迭代公式进行修改，添加一个证据(evidence)因子：")]),t._v(" "),e("p",[e("span",{staticClass:"katex-display"},[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("mtext",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("v")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("i")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("d")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("n")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("c")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")])],1),e("mrow",[e("mo",{attrs:{fence:"true"}},[t._v("(")]),e("mi",[t._v("q")]),e("mo",{attrs:{separator:"true"}},[t._v(",")]),e("msup",[e("mi",[t._v("q")]),e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("′")])],1)],1),e("mo",{attrs:{fence:"true"}},[t._v(")")])],1),e("mo",[t._v("=")]),e("msubsup",[e("mo",[t._v("∑")]),e("mrow",[e("mi",[t._v("i")]),e("mo",[t._v("=")]),e("mn",[t._v("1")])],1),e("mrow",[e("mrow",[e("mo",{attrs:{fence:"true"}},[t._v("∣")]),e("mi",[t._v("E")]),e("mo",[t._v("(")]),e("mi",[t._v("q")]),e("mo",[t._v(")")]),e("mo",[t._v("∩")]),e("mi",[t._v("E")]),e("mrow",[e("mo",{attrs:{fence:"true"}},[t._v("(")]),e("msup",[e("mi",[t._v("q")]),e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("′")])],1)],1),e("mo",{attrs:{fence:"true"}},[t._v(")")])],1),e("mo",{attrs:{fence:"true"}},[t._v("∣")])],1)],1)],1),e("mfrac",[e("mrow",[e("mn",[t._v("1")])],1),e("mrow",[e("msup",[e("mn",[t._v("2")]),e("mrow",[e("mi",[t._v("i")])],1)],1)],1)],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("\\text {evidence} \\left( q , q ^ { \\prime } \\right) = \\sum _ { i = 1 } ^ { \\left| E ( q ) \\cap E \\left( q ^ { \\prime } \\right) \\right| } \\frac { 1 } { 2 ^ { i } }\n")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"strut",staticStyle:{height:"1.9678850000000003em"}}),e("span",{staticClass:"strut bottom",staticStyle:{height:"3.2455540000000003em","vertical-align":"-1.277669em"}}),e("span",{staticClass:"base displaystyle textstyle uncramped"},[e("span",{staticClass:"text mord displaystyle textstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("e")]),e("span",{staticClass:"mord mathrm",staticStyle:{"margin-right":"0.01389em"}},[t._v("v")]),e("span",{staticClass:"mord mathrm"},[t._v("i")]),e("span",{staticClass:"mord mathrm"},[t._v("d")]),e("span",{staticClass:"mord mathrm"},[t._v("e")]),e("span",{staticClass:"mord mathrm"},[t._v("n")]),e("span",{staticClass:"mord mathrm"},[t._v("c")]),e("span",{staticClass:"mord mathrm"},[t._v("e")])]),e("span",{staticClass:"minner displaystyle textstyle uncramped"},[e("span",{staticClass:"style-wrap reset-textstyle textstyle uncramped",staticStyle:{top:"0em"}},[t._v("(")]),e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"mpunct"},[t._v(",")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"-0.413em","margin-right":"0.05em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[e("span",{staticClass:"mord scriptstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("′")])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"style-wrap reset-textstyle textstyle uncramped",staticStyle:{top:"0em"}},[t._v(")")])]),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mop op-limits"},[e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"1.1776689999999999em","margin-left":"0em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0.7em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle cramped"},[e("span",{staticClass:"mord scriptstyle cramped"},[e("span",{staticClass:"mord mathit"},[t._v("i")]),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mord mathrm"},[t._v("1")])])])]),e("span",{staticStyle:{top:"-0.000005000000000143778em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0.7em"}},[t._v("​")])]),e("span",[e("span",{staticClass:"op-symbol large-op mop"},[t._v("∑")])])]),e("span",{staticStyle:{top:"-1.3360050000000003em","margin-left":"0em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0.7em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[e("span",{staticClass:"mord scriptstyle uncramped"},[e("span",{staticClass:"minner scriptstyle uncramped"},[e("span",{staticClass:"style-wrap reset-scriptstyle scriptstyle uncramped",staticStyle:{top:"0em"}},[t._v("∣")]),e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"mopen"},[t._v("(")]),e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"mclose"},[t._v(")")]),e("span",{staticClass:"mbin"},[t._v("∩")]),e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05764em"}},[t._v("E")]),e("span",{staticClass:"minner scriptstyle uncramped"},[e("span",{staticClass:"style-wrap reset-scriptstyle scriptstyle uncramped",staticStyle:{top:"0em"}},[t._v("(")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"-0.363em","margin-right":"0.07142857142857144em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-scriptstyle scriptscriptstyle uncramped"},[e("span",{staticClass:"mord scriptscriptstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("′")])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"style-wrap reset-scriptstyle scriptstyle uncramped",staticStyle:{top:"0em"}},[t._v(")")])]),e("span",{staticClass:"style-wrap reset-scriptstyle scriptstyle uncramped",staticStyle:{top:"0em"}},[t._v("∣")])])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0.7em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"mord reset-textstyle displaystyle textstyle uncramped"},[e("span",{staticClass:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),e("span",{staticClass:"mfrac"},[e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"0.686em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle textstyle cramped"},[e("span",{staticClass:"mord textstyle cramped"},[e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathrm"},[t._v("2")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"-0.289em","margin-right":"0.05em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle cramped"},[e("span",{staticClass:"mord scriptstyle cramped"},[e("span",{staticClass:"mord mathit"},[t._v("i")])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),e("span",{staticStyle:{top:"-0.22999999999999998em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle textstyle uncramped frac-line"})]),e("span",{staticStyle:{top:"-0.677em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle textstyle uncramped"},[e("span",{staticClass:"mord textstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("1")])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})])])])])])]),t._v(" "),e("p",[t._v("相应地，新的计算公式变为")]),t._v(" "),e("p",[e("span",{staticClass:"katex-display"},[e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("msub",[e("mi",[t._v("s")]),e("mrow",[e("mtext",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("v")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("i")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("d")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("n")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("c")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")])],1)],1)],1),e("mrow",[e("mo",{attrs:{fence:"true"}},[t._v("(")]),e("mi",[t._v("q")]),e("mo",{attrs:{separator:"true"}},[t._v(",")]),e("msup",[e("mi",[t._v("q")]),e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("′")])],1)],1),e("mo",{attrs:{fence:"true"}},[t._v(")")])],1),e("mo",[t._v("=")]),e("mtext",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("v")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("i")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("d")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("n")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("c")]),e("mi",{attrs:{mathvariant:"normal"}},[t._v("e")])],1),e("mrow",[e("mo",{attrs:{fence:"true"}},[t._v("(")]),e("mi",[t._v("q")]),e("mo",{attrs:{separator:"true"}},[t._v(",")]),e("msup",[e("mi",[t._v("q")]),e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("′")])],1)],1),e("mo",{attrs:{fence:"true"}},[t._v(")")])],1),e("mo",[t._v("⋅")]),e("mi",[t._v("s")]),e("mrow",[e("mo",{attrs:{fence:"true"}},[t._v("(")]),e("mi",[t._v("q")]),e("mo",{attrs:{separator:"true"}},[t._v(",")]),e("msup",[e("mi",[t._v("q")]),e("mrow",[e("mi",{attrs:{mathvariant:"normal"}},[t._v("′")])],1)],1),e("mo",{attrs:{fence:"true"}},[t._v(")")])],1)],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("s _ { \\text {evidence} } \\left( q , q ^ { \\prime } \\right) = \\text {evidence} \\left( q , q ^ { \\prime } \\right) \\cdot s \\left( q , q ^ { \\prime } \\right)\n")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"strut",staticStyle:{height:"0.801892em"}}),e("span",{staticClass:"strut bottom",staticStyle:{height:"1.051892em","vertical-align":"-0.25em"}}),e("span",{staticClass:"base displaystyle textstyle uncramped"},[e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathit"},[t._v("s")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle cramped"},[e("span",{staticClass:"mord scriptstyle cramped"},[e("span",{staticClass:"text mord scriptstyle cramped"},[e("span",{staticClass:"mord mathrm"},[t._v("e")]),e("span",{staticClass:"mord mathrm",staticStyle:{"margin-right":"0.01389em"}},[t._v("v")]),e("span",{staticClass:"mord mathrm"},[t._v("i")]),e("span",{staticClass:"mord mathrm"},[t._v("d")]),e("span",{staticClass:"mord mathrm"},[t._v("e")]),e("span",{staticClass:"mord mathrm"},[t._v("n")]),e("span",{staticClass:"mord mathrm"},[t._v("c")]),e("span",{staticClass:"mord mathrm"},[t._v("e")])])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"minner displaystyle textstyle uncramped"},[e("span",{staticClass:"style-wrap reset-textstyle textstyle uncramped",staticStyle:{top:"0em"}},[t._v("(")]),e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"mpunct"},[t._v(",")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"-0.413em","margin-right":"0.05em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[e("span",{staticClass:"mord scriptstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("′")])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"style-wrap reset-textstyle textstyle uncramped",staticStyle:{top:"0em"}},[t._v(")")])]),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"text mord displaystyle textstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("e")]),e("span",{staticClass:"mord mathrm",staticStyle:{"margin-right":"0.01389em"}},[t._v("v")]),e("span",{staticClass:"mord mathrm"},[t._v("i")]),e("span",{staticClass:"mord mathrm"},[t._v("d")]),e("span",{staticClass:"mord mathrm"},[t._v("e")]),e("span",{staticClass:"mord mathrm"},[t._v("n")]),e("span",{staticClass:"mord mathrm"},[t._v("c")]),e("span",{staticClass:"mord mathrm"},[t._v("e")])]),e("span",{staticClass:"minner displaystyle textstyle uncramped"},[e("span",{staticClass:"style-wrap reset-textstyle textstyle uncramped",staticStyle:{top:"0em"}},[t._v("(")]),e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"mpunct"},[t._v(",")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"-0.413em","margin-right":"0.05em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[e("span",{staticClass:"mord scriptstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("′")])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"style-wrap reset-textstyle textstyle uncramped",staticStyle:{top:"0em"}},[t._v(")")])]),e("span",{staticClass:"mbin"},[t._v("⋅")]),e("span",{staticClass:"mord mathit"},[t._v("s")]),e("span",{staticClass:"minner displaystyle textstyle uncramped"},[e("span",{staticClass:"style-wrap reset-textstyle textstyle uncramped",staticStyle:{top:"0em"}},[t._v("(")]),e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"mpunct"},[t._v(",")]),e("span",{staticClass:"mord"},[e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("q")]),e("span",{staticClass:"vlist"},[e("span",{staticStyle:{top:"-0.413em","margin-right":"0.05em"}},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),e("span",{staticClass:"reset-textstyle scriptstyle uncramped"},[e("span",{staticClass:"mord scriptstyle uncramped"},[e("span",{staticClass:"mord mathrm"},[t._v("′")])])])]),e("span",{staticClass:"baseline-fix"},[e("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[e("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])]),e("span",{staticClass:"style-wrap reset-textstyle textstyle uncramped",staticStyle:{top:"0em"}},[t._v(")")])])])])])])]),t._v(" "),e("p",[t._v("按照此公式，上面的例子计算出的手机和相机的相似度为 0.4， 而手机和平板之间的相似度依次迭代为 0.3, 0.42,... 0.499")]),t._v(" "),e("p",[t._v("另一方面，原始的 SimRank 算法没有考虑边的权值。或者说，对于边的归一化权重，用的是比较笼统的关联的边数分之一来度量， 并没有考虑不同的边可能有不同的权重度量")]),t._v(" "),e("h3",{attrs:{id:"最大流问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最大流问题"}},[t._v("#")]),t._v(" 最大流问题")]),t._v(" "),e("h3",{attrs:{id:"中国邮路问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中国邮路问题"}},[t._v("#")]),t._v(" 中国邮路问题")]),t._v(" "),e("h2",{attrs:{id:"spectral-graph-theory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spectral-graph-theory"}},[t._v("#")]),t._v(" Spectral graph theory")]),t._v(" "),e("p",[e("strong",[t._v("谱图论")]),t._v("，即图的谱理论，旨在用代数与几何的方法来表示“图”这个数据结构并探究图的内在特征")]),t._v(" "),e("blockquote",[e("p",[t._v("“Just as astronomers use stellar spectra to determine the make-up of distant stars… [we aim] to deduce the properties and structure of [networks] from its spectrum.”\n-Chapter 1, Spectral Graph Theory by F.R.K. Chung")])]),t._v(" "),e("p",[t._v("我们知道，在天体观测中，由于许多天体离我们实在是太过遥远，因此不便直接观察，因此我们往往通过观察光谱来进行天体观测，其中最著名的例子就是由观察到谱线红移而推测出宇宙正在不断扩张。\n同样的，一个图的谱也是用于描述图的重要工具。谱图理论就是研究如何通过几个容易计算的定量来描述图的性质。\n通常的方法是将图编码为一个矩阵然后计算矩阵的特征值（也就是谱 spectrum） 。")]),t._v(" "),e("p",[t._v("拉普拉斯矩阵(Laplacian matrix): "),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("mi",[t._v("L")]),e("mo",[t._v("=")]),e("mi",[t._v("D")]),e("mo",[t._v("−")]),e("mi",[t._v("A")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("L = D - A")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),e("span",{staticClass:"strut bottom",staticStyle:{height:"0.76666em","vertical-align":"-0.08333em"}}),e("span",{staticClass:"base textstyle uncramped"},[e("span",{staticClass:"mord mathit"},[t._v("L")]),e("span",{staticClass:"mrel"},[t._v("=")]),e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("D")]),e("span",{staticClass:"mbin"},[t._v("−")]),e("span",{staticClass:"mord mathit"},[t._v("A")])])])])]),t._v(" "),e("p",[e("img",{attrs:{src:a(229),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"deepwalk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deepwalk"}},[t._v("#")]),t._v(" DeepWalk")]),t._v(" "),e("h2",{attrs:{id:"工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[t._v("#")]),t._v(" 工具")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://istc-bigdata.org/GraphBlas/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Graph BLAS"),e("OutboundLink")],1),t._v("\n以线性代数的眼光看图算法，并试图构建一个像 BLAS 那样基础的运算库来支持图算法的设计。")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[t._v("Graph Algorithms in the Language of Linear Algebra, Edited by J. Kepner and J. Gilbert, SIAM, 2011.")])])])}),[],!1,null,null,null);s.default=i.exports}}]);