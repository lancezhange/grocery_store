(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{579:function(t,r,e){"use strict";e.r(r);var a=e(17),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"数据科学工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据科学工具"}},[t._v("#")]),t._v(" 数据科学工具")]),t._v(" "),e("p",[t._v("武库中，要有匕首短刀，也要有大刀长矛，要有神鞭，也要有铁锤，总之要丰富，在不同的场景下用称手的武器，才能手到擒来。")]),t._v(" "),e("p",[t._v("随着越来越多的机器学习工具加入开源社区，整个机器学习工具领域呈现出百花齐放的局面。")]),t._v(" "),e("h3",{attrs:{id:"spark"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spark"}},[t._v("#")]),t._v(" Spark")]),t._v(" "),e("p",[t._v("Spark 被认为是 "),e("strong",[e("em",[t._v("smartphone of data")])])]),t._v(" "),e("ul",[e("li",[t._v("MLlib")]),t._v(" "),e("li",[t._v("GraphX")]),t._v(" "),e("li",[t._v("Spark SQL")]),t._v(" "),e("li",[t._v("Spark Streaming")])]),t._v(" "),e("p",[t._v("其他基于　 spark 的第三方库")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/cloudera/spark-timeseries",target:"_blank",rel:"noopener noreferrer"}},[t._v("spark-ts"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"flink"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flink"}},[t._v("#")]),t._v(" Flink")]),t._v(" "),e("h3",{attrs:{id:"hadoop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hadoop"}},[t._v("#")]),t._v(" Hadoop")]),t._v(" "),e("h3",{attrs:{id:"scikit-learn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scikit-learn"}},[t._v("#")]),t._v(" Scikit-Learn")]),t._v(" "),e("h3",{attrs:{id:"h2o"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#h2o"}},[t._v("#")]),t._v(" H2O")]),t._v(" "),e("p",[t._v("神说，有了火(spark)，当然也要有水，于是 H2O 横空出世。")]),t._v(" "),e("h3",{attrs:{id:"weka"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weka"}},[t._v("#")]),t._v(" Weka")]),t._v(" "),e("h3",{attrs:{id:"vompal-wabbit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vompal-wabbit"}},[t._v("#")]),t._v(" Vompal Wabbit")]),t._v(" "),e("h3",{attrs:{id:"caffe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#caffe"}},[t._v("#")]),t._v(" caffe")]),t._v(" "),e("h3",{attrs:{id:"torch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#torch"}},[t._v("#")]),t._v(" torch")]),t._v(" "),e("h3",{attrs:{id:"theano"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#theano"}},[t._v("#")]),t._v(" theano")]),t._v(" "),e("h3",{attrs:{id:"keras"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keras"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"http://keras.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Keras"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("**"),e("code",[t._v("Keras")]),t._v("**在德语中的意思为‘号角’")]),t._v(" "),e("h3",{attrs:{id:"tf-tensorflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tf-tensorflow"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"http://tensorflow.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("TF(tensorFlow)"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("谷歌开源的第二代深度学习系统，参看 "),e("a",{attrs:{href:"http://vdisk.weibo.com/s/tQWXdywczVZO",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jeff Dean 的介绍"),e("OutboundLink")],1),t._v(" 和"),e("a",{attrs:{href:"http://www.jianshu.com/p/65dc64e4c81f",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方白皮书(译)"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("第一代是 DistBelief, 其可扩展性较好，但灵活性不足")]),t._v(" "),e("p",[t._v("然而 TF 一出，对其"),e("a",{attrs:{href:"https://github.com/soumith/convnet-benchmarks/issues/66",target:"_blank",rel:"noopener noreferrer"}},[t._v("性能的评测结果"),e("OutboundLink")],1),t._v("却并不理想，被戏称为 "),e("em",[t._v("TensorSlow")]),t._v("，一时间舆论大哗。")]),t._v(" "),e("h3",{attrs:{id:"dmtk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dmtk"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"http://www.dmtk.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("DMTK"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("DMTK(distributed machine learning toolkit)，由微软开源，包含 DMTK 分布式机器学习框架，LightLDA, Distributed (Multisense) Word Embedding 等组件。")]),t._v(" "),e("h3",{attrs:{id:"mxnet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mxnet"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://github.com/dmlc/mxnet/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MXNet"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("DMLC 出品。CXXNet 的进化版，支持 python, R, Go, Julia 等多种语言接口，绝对是深度学习领域最为野心勃勃的项目之一。高质量的"),e("a",{attrs:{href:"http://mxnet.rtfd.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("设计文档"),e("OutboundLink")],1),t._v("和示例，是学习的好材料。")]),t._v(" "),e("p",[t._v("特色/优势")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("借助 mshadow 模块，CPU 与 GPU 不必在代码层面区分，即只写一份代码（这是咋做到的？）。")])]),t._v(" "),e("li",[e("p",[t._v("符号式编程(symbolic programming)和命令式编程的结合。")]),t._v(" "),e("p",[t._v("符号式编程将定义运算图的步骤和编译运算的步骤分离。\n我个人理解，符号式编程和命令式编程的区别在于，拿多项式求值作例子，后者是直接往式子里代入数值，然后一步一步计算，而前者先做多项式化简，到最后没法化简了再代入数值求结果。有些多项式看着比较复杂，但经过化简可能最后就剩一两项，因此符号式编程更为节省计算量。此外，符号式编程由于明示了最后的结果(计算的边界)，中间结果一概不管，因此可以重复利用内存，节省空间占用，当然，命令式程序也有垃圾回收机制，但因为是编译器通用的垃圾回收策略，可能并不会像符号式程序里的效率这么高。")])]),t._v(" "),e("li",[e("p",[t._v("利用参数服务器，容易分布式扩展")])])]),t._v(" "),e("p",[t._v("参见　[MXNet 设计和实现简洁]，by 李沐, et al.")]),t._v(" "),e("h3",{attrs:{id:"systemml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#systemml"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"http://systemml.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SystemML"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Apache SystemML，IBM 开源的分布式、命令式机器学习平台，目前仍然处于孵化阶段")]),t._v(" "),e("h3",{attrs:{id:"microsoft-azure"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#microsoft-azure"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://login.microsoftonline.com/common/oauth2/authorize?api-version=1.0&client_id=0736f41a-0425-4b46-bdb5-1563eff02385&response_type=id_token&scope=openid&redirect_uri=https://login.azureml.net/response.aspx&response_mode=form_post&state=4dabebe2f8bd438d99a6b735b405fb1a&nonce=635846325692222953.ZWQ5MmM1OTYtYTNmMS00NGIxLThjYjctMDJlOTRjMDM5NDI3NTkwM2MyNzctNjEzYS00MzVmLTk3NmItOWU3NDNhZGMzMjA2",target:"_blank",rel:"noopener noreferrer"}},[t._v("MicroSoft Azure"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/BYVoid/OpenCC",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenCC"),e("OutboundLink")],1),t._v("\n中文繁简转换")])])}),[],!1,null,null,null);r.default=s.exports}}]);