(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{470:function(a,t,r){"use strict";r.r(t);var s=r(17),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"系统设计专题-ignore-true"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#系统设计专题-ignore-true"}},[a._v("#")]),a._v(" 系统设计专题 {ignore=true}")]),a._v(" "),r("p",[a._v("[TOC]")]),a._v(" "),r("h2",{attrs:{id:"分布式-id"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式-id"}},[a._v("#")]),a._v(" 分布式 id")]),a._v(" "),r("p",[a._v("如何设计一个分布式 ID 生成器(Distributed ID Generator)？")]),a._v(" "),r("p",[r("strong",[a._v("需求")])]),a._v(" "),r("ol",[r("li",[a._v("全局唯一")]),a._v(" "),r("li",[a._v("尽可能短以节省内存")]),a._v(" "),r("li",[a._v("按时间粗略有序")])]),a._v(" "),r("h3",{attrs:{id:"uuid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#uuid"}},[a._v("#")]),a._v(" UUID")]),a._v(" "),r("p",[a._v("4 个字节表示的 Unix timestamp,\n3 个字节表示的机器的 ID\n2 个字节表示的进程 ID\n3 个字节表示的计数器")]),a._v(" "),r("p",[a._v("总共 12 个字节，太长了！")]),a._v(" "),r("h3",{attrs:{id:"多台-mysql-服务器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多台-mysql-服务器"}},[a._v("#")]),a._v(" 多台 mysql 服务器")]),a._v(" "),r("p",[a._v("假设用 8 台 MySQL 服务器协同工作，第一台 MySQL 初始值是 1，每次自增 8，第二台 MySQL 初始值是 2，每次自增 8，依次类推。前面用一个 round-robin load balancer 挡着，每来一个请求，由 round-robin balancer 随机地将请求发给 8 台 MySQL 中的任意一个，然后返回一个 ID。")]),a._v(" "),r("h2",{attrs:{id:"短链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#短链"}},[a._v("#")]),a._v(" 短链")]),a._v(" "),r("p",[a._v("当前互联网上的"),r("a",{attrs:{href:"0http://www.worldwidewebsize.com"}},[a._v("网页总数大概是 45 亿")]),a._v("，45 亿超过了 2^{32}=4294967296，但远远小于 64 位整数的上限值，那么用一个 64 位整数足够了。")]),a._v(" "),r("h3",{attrs:{id:"_301-还是-302-重定向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_301-还是-302-重定向"}},[a._v("#")]),a._v(" 301 还是 302 重定向")]),a._v(" "),r("p",[a._v("301 是永久重定向，302 是临时重定向")]),a._v(" "),r("h2",{attrs:{id:"信息流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#信息流"}},[a._v("#")]),a._v(" 信息流")]),a._v(" "),r("h2",{attrs:{id:"定时任务调度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#定时任务调度"}},[a._v("#")]),a._v(" 定时任务调度")]),a._v(" "),r("h2",{attrs:{id:"api-限速"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#api-限速"}},[a._v("#")]),a._v(" API 限速")]),a._v(" "),r("h2",{attrs:{id:"kv-存储引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kv-存储引擎"}},[a._v("#")]),a._v(" KV 存储引擎")]),a._v(" "),r("p",[a._v("目前开源的 KV 存储引擎中，RocksDB 是流行的一个")]),a._v(" "),r("p",[a._v("RocksDB 最初是从 LevelDB 进化而来的")]),a._v(" "),r("p",[a._v("有一个反直觉的事情是，"),r("strong",[a._v("内存随机写甚至比硬盘的顺序读还要慢")]),a._v("，磁盘随机写就更慢了")]),a._v(" "),r("h2",{attrs:{id:"异步框架"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#异步框架"}},[a._v("#")]),a._v(" 异步框架")]),a._v(" "),r("h3",{attrs:{id:"seastar"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#seastar"}},[a._v("#")]),a._v(" SeaStar")]),a._v(" "),r("p",[a._v("现代硬件上的高性能 C++异步框架 - SeaStar")]),a._v(" "),r("p",[a._v("说到 Seastar，不得不说 Scylla。Scylla 是 2015 年 9 月开源，由大神 KVM 之父 Avi Kivity 创建的 NoSQL 数据库，接口协议完全兼容 Cassandra，但性能号称快了 10 倍：每节点 1 millionIOPS。Scylla 完全基于 Seastar 库，由 C++改写的 Cassandra。")]),a._v(" "),r("p",[a._v("所以 Scylla 的惊鸿面世也带来了大家对于 Seastar 的瞩目。实际上，Scylla 只是 Seastar 的一个应用，其他应用如 Pedis 也佐证了 Seastar 是整个应用性能提升的基石.")]),a._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),r("p",[a._v("关于分布式系统设计问题，参考"),r("RouterLink",{attrs:{to:"/section2/distributedSystem.html"}},[a._v("分布式系统")])],1),a._v(" "),r("p",[a._v("关于 AI 系统设计问题，参考 "),r("RouterLink",{attrs:{to:"/section6/ai-system.html"}},[a._v("AI 系统设计")])],1),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://legacy.gitbook.com/book/soulmachine/system-design/details",target:"_blank",rel:"noopener noreferrer"}},[a._v("系统设计面试题精选"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);