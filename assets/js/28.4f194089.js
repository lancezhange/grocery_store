(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{352:function(t,e,n){t.exports=n.p+"assets/img/2020-01-22-15-37-38.10ffab14.png"},353:function(t,e,n){t.exports=n.p+"assets/img/2020-03-17-17-11-06.dfa47c53.png"},554:function(t,e,n){"use strict";n.r(e);var a=n(17),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"降维-dimensionality-reduction-ignore-ture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#降维-dimensionality-reduction-ignore-ture"}},[t._v("#")]),t._v(" 降维 (dimensionality reduction) {ignore=ture}")]),t._v(" "),a("p",[t._v("[Toc]")]),t._v(" "),a("h2",{attrs:{id:"pca"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pca"}},[t._v("#")]),t._v(" pca")]),t._v(" "),a("p",[t._v("信息论认为信号具有较大方差，噪音具有较小方差，信噪比就是信号与噪音的方差比.")]),t._v(" "),a("p",[t._v("最大方差理论\n: 信噪比越大越好")]),t._v(" "),a("div",[a("figure",[a("img",{staticStyle:{width:"300px"},attrs:{src:"img-pca/2019-05-23-16-26-27.png"}})])]),t._v(" "),a("p",[t._v("进行 PCA 降维时，需要计算协方差矩阵")]),t._v(" "),a("h2",{attrs:{id:"t-sne"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t-sne"}},[t._v("#")]),t._v(" t-SNE")]),t._v(" "),a("p",[t._v("t-distributed Stochastic Neighbor Embedding")]),t._v(" "),a("h2",{attrs:{id:"ivis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ivis"}},[t._v("#")]),t._v(" ivis")]),t._v(" "),a("p",[t._v("t-SNE 的问题点：")]),t._v(" "),a("ol",[a("li",[t._v("not robust")]),t._v(" "),a("li",[t._v("新加点要在全集上重新学习，不够 scalable")]),t._v(" "),a("li",[t._v("复杂度高")]),t._v(" "),a("li",[t._v("局部保结构，不保全局结构")]),t._v(" "),a("li")]),t._v(" "),a("p",[a("img",{attrs:{src:n(352),alt:""}})]),t._v(" "),a("p",[t._v("用到的技术： siamese neural networks (SNNs)")]),t._v(" "),a("p",[t._v("附赠 Ivis-animate 和 Ivis-explain.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.nature.com/articles/s41598-019-45301-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("Structure-preserving visualisation of high dimensional single-cell datasets"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"keplermapper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keplermapper"}},[t._v("#")]),t._v(" KeplerMapper")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/scikit-tda/kepler-mapper",target:"_blank",rel:"noopener noreferrer"}},[t._v("KeplerMapper"),a("OutboundLink")],1),t._v("\n生成的网页非常酷")]),t._v(" "),a("p",[a("img",{attrs:{src:n(353),alt:""}})]),t._v(" "),a("p",[t._v("更棒的是，你可以在 jupyter notebook 中展示")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" kmapper "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" jupyter\njupyter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("display"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path_html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://mlwave.github.io/tda/word2vec-gender-bias.html"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("aside",{staticClass:"caution"},[t._v("\n备注:  path_html 如果是本地文件，需要用 python3 -m http.server 8000 起服务后传入 url\n")]),t._v(" "),a("h2",{attrs:{id:"umap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#umap"}},[t._v("#")]),t._v(" UMAP")]),t._v(" "),a("h2",{attrs:{id:"附录-降维可视化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录-降维可视化"}},[t._v("#")]),t._v(" 附录-降维可视化")]),t._v(" "),a("p",[t._v("我们可以利用 tensorboard 进行降维可视化（包含 pca,tsne, umap 三种降维方法），特别地，如果数据带标记，可以用不同颜色区分，直观感受降维效果；此外，也可以展示最近邻。")]),t._v(" "),a("details",[a("summary",[t._v("展开代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```python\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nimport numpy as np\nimport tensorflow as tf\nfrom tensorflow.contrib.tensorboard.plugins import projector\n\n\n\n# ======== data\n# poi_id, poi_label, poi_vec, poi_name\ndata_file = \"some.txt\"\n# poi_id poi_label embedding_sep_with_comma\n\nmeta_file = \"/Users/zhangxisheng/Downloads//meta.tsv\"\nTENSORBOARD_FILES_PATH = 'where_to_save_tensorboard_log'\n\nwith open(data_file, 'r', encoding='utf-8') as data, open(meta_file, 'w',encoding='utf-8') as meta:\n\n    lines = data.readlines()[1:]\n    VOCAB_SIZE = len(lines)\n    EMBEDDING_DIM = len(lines[0].split('\\t')[2].split(','))\n    w2v = np.zeros((VOCAB_SIZE, EMBEDDING_DIM))\n\n    meta.write(\"Index\\tLabel\\tName\\n\")\n\n    for index, line in enumerate(lines):\n        content = line.split('\\t')\n        if len(content) < 3:\n            print(\"line not valid\", content)\n            continue\n        w2v[index] = np.array([float(i) for i in content[2].split(',')])\n        meta.write(\"%d\\t%s\\t%s\\n\" % (index, content[1], content[3]))\n\nwith tf.Session() as sess:\n    X_init = tf.placeholder(tf.float32, shape=(VOCAB_SIZE, EMBEDDING_DIM), name=\"embedding\")\n    X = tf.Variable(X_init)\n    init = tf.global_variables_initializer()\n\n    sess.run(init, feed_dict={X_init: w2v})\n    saver = tf.train.Saver()\n    writer = tf.summary.FileWriter(TENSORBOARD_FILES_PATH, sess.graph)\n    config = projector.ProjectorConfig()\n    embed = config.embeddings.add()\n    embed.metadata_path = meta_file\n    projector.visualize_embeddings(writer,config)\n    saver.save(sess, TENSORBOARD_FILES_PATH+'/model.ckpt', global_step = VOCAB_SIZE)\n```\n")])])])]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://idyll.pub/post/dimensionality-reduction-293e465c2a3443e8941b016d/",target:"_blank",rel:"noopener noreferrer"}},[t._v("降维可视化"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);